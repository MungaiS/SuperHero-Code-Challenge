"""Added relationships

Revision ID: 7eb2064192a8
Revises: 34c003e68e38
Create Date: 2024-04-09 14:20:38.956525

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7eb2064192a8'
down_revision = '34c003e68e38'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('hero_powers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('power_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('hero_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(batch_op.f('fk_hero_powers_hero_id_heroes'), 'heroes', ['hero_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('fk_hero_powers_power_id_powers'), 'powers', ['power_id'], ['id'])

    with op.batch_alter_table('heroes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))

    with op.batch_alter_table('powers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('powers', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('heroes', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('hero_powers', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_hero_powers_power_id_powers'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('fk_hero_powers_hero_id_heroes'), type_='foreignkey')
        batch_op.drop_column('hero_id')
        batch_op.drop_column('power_id')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    # ### end Alembic commands ###
